(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();let l={lat:null,lon:null,isCurrentLocation:!1};function g(t,e,n=!1){l.lat=t,l.lon=e,console.log("Location updated:",t,e),console.log("Location state updated:",l),l.isCurrentLocation=n,console.log("Location updated:",{lat:t,lon:e,isCurrentLocation:n})}const p={apiKey:""7cfedd3863d854a6cdb9b50e4a5a818b"",endpoints:{currentWeather:"https://api.openweathermap.org/data/2.5/weather",forecast:"https://api.openweathermap.org/data/2.5/forecast",geocoding:"https://api.openweathermap.org/geo/1.0/direct"}},C={apiKey:""Qg6O7FoLIXDgeg4Qt21swNg-yCp1owgHrH7q2IMh1Po"",endpoints:{autosuggest:"https://autocomplete.search.hereapi.com/v1/autocomplete"}},T=5,R=10,_=10;function M(){let t=JSON.parse(localStorage.getItem("weatherFetchTimestamps"))||[];const e=Date.now();t.push(e),t.length>T&&t.shift(),localStorage.setItem("weatherFetchTimestamps",JSON.stringify(t))}function h(){const t=JSON.parse(localStorage.getItem("weatherFetchTimestamps"))||[];if(t.length<T)return!1;const e=t[0],n=t[t.length-1];if((n-e)/1e3<_){const o=R-(Date.now()-n)/1e3;if(o>0)return U(Math.ceil(o)),!0}return!1}function U(t){const e=document.getElementById("cooldown-message");e.textContent=`Too many requests. Please wait ${t} seconds.`;const n=setInterval(()=>{t--,t<=0?(clearInterval(n),e.textContent=""):e.textContent=`Too many requests. Please wait ${t} seconds.`},1e3)}const D=document.querySelector(".main-box"),q=document.querySelector(".city-name");async function y(){if(h()){console.log("Fetch weather blocked due to rate limiting.");return}M();const{lat:t,lon:e}=l;try{const a=await(await fetch(`${p.endpoints.currentWeather}?lat=${t}&lon=${e}&appid=${p.apiKey}&units=metric`)).json();console.log(a),W(a)}catch(n){console.error("Error fetching weather data:",n),D.innerHTML='<p class="error">Unable to load weather data</p>'}}function W(t){const{main:e,weather:n,wind:a,clouds:o,name:s,rain:r}=t,i=Math.round(e.temp),d=Math.round(e.temp_max),c=Math.round(e.temp_min),u=n[0].main,E=n[0].description,P=n[0].icon,b=e.humidity,k=e.pressure,N=a.speed;o.all;const v=r?`Rainfall (last hour): ${r["1h"]} mm`:"";console.log("Rendering weather:",t);const H=`assets/weather-icons/${P}.svg`;q.innerHTML=`<span>${s}</span>`,D.innerHTML=`
            
                <div class="inner-section inner-section-one">
                    <div class="weather-icon">    
                        <img src="${H}" alt="${E}">
                    </div>    
                    <div class="temperature-section">
                        <p class="description">${u} <br>(${E})</p>
                        <p class="temperature">${i}<span class="temp-main-indicator">°C</span></p>
                    </div>
                </div>
                <div class="inner-section inner-section-two">
                    <p><span class="desc">Max Temp:</span> <span class="val">${d}°C</span></p>
                    <p><span class="desc">Min Temp:</span> <span class="val">${c}°C</span></p>
                    ${v?`<p><span class="desc">Rain:</span><span class="val">${v}</span></p>`:""}
                </div>
                <div class="inner-section inner-section-three">
                    <p><span class="desc">Humidity:</span> <span class="val">${b}%</span></p>
                    <p><span class="desc">Pressure:</span> <span class="val">${k} hPa</span></p>
                    <p><span class="desc">Wind Speed:</span> <span class="val">${N} m/s</span></p>
                </div>
            
        `}const B=document.querySelector(".header-date-container"),x=new Date,K={weekday:"long"},F=x.toLocaleDateString("en-US",K),G={month:"long",day:"numeric",year:"numeric"},J=x.toLocaleDateString("en-US",G);B.innerHTML=`<div class="weekday">${F}</div><div class="fulldate">${J}</div>`;const m=document.querySelector(".primary-forecast"),f=document.createElement("div");f.classList.add("date-container");m.parentElement.insertBefore(f,m);async function w(){if(h()){console.log("Fetch forecast blocked due to rate limiting.");return}M();const{lat:t,lon:e}=l;try{const a=await(await fetch(`${p.endpoints.forecast}?lat=${t}&lon=${e}&appid=${p.apiKey}&units=metric`)).json(),o=j(a);z(o)}catch(n){console.error("Error fetching forecast data:",n),m.innerHTML='<p class="error">Unable to load forecast data</p>'}}function j(t){const e={};return t.list.forEach(n=>{const a=new Date(n.dt*1e3).toISOString().split("T")[0];e[a]||(e[a]=[]),e[a].push(n)}),Object.entries(e).map(([n,a])=>{let o=1/0,s=-1/0,r=0;const i={};a.forEach(c=>{o=Math.min(o,c.main.temp_min),s=Math.max(s,c.main.temp_max),r=Math.max(r,c.pop||0);const u=c.weather[0].main;i[u]=(i[u]||0)+1});const d=Object.keys(i).reduce((c,u)=>i[c]>i[u]?c:u);return{date:new Date(n).getTime()/1e3,minTemp:Math.round(o),maxTemp:Math.round(s),maxPop:Math.round(r*100),weather:d}})}function z(t){f.innerHTML="",m.innerHTML="",t.forEach((e,n)=>{const a=document.createElement("div");a.classList.add("date-item"),a.textContent=V(e.date),f.appendChild(a);const o=document.createElement("div");o.classList.add("forecast-day"),o.innerHTML=`
          <div class="forecast-temp-cont">
            <span class="forecast-max">${e.maxTemp}<span class="temp-forecast-indicator-max">°C</span></span>
            <span class="forecast-min">${e.minTemp}<span class="temp-forecast-indicator-min">°C</span></span>
          </div>
          <div class="forecast-info-cont">
            <p class="summary">${e.weather}</p>
            <p class="summary">Precipitation: ${e.maxPop}%</p>
          </div>  
        `,m.appendChild(o)})}function V(t){const e={weekday:"long",day:"numeric"},n=new Date(t*1e3).toLocaleDateString("en-US",e),[a,o]=n.split(" ");return`${a} ${o}`}let S;const Y=(t,e)=>{clearTimeout(S),S=setTimeout(t,e)},X=async t=>{const e=`${C.endpoints.autosuggest}?q=${encodeURIComponent(t)}&apikey=${C.apiKey}`;try{const n=await fetch(e);if(!n.ok)throw new Error("Error fetching data");return(await n.json()).items}catch(n){return console.error("Error fetching suggestions:",n),[]}},$=(t,e,n)=>{e.innerHTML="";let a=-1;n.filter(o=>o.address.city||o.address.district).forEach((o,s)=>{const r=o.address.city||o.address.district||"",i=o.address.countryName||"",d=o.address.countryCode||"";if(r&&!r.startsWith(",")){const c=document.createElement("li");c.textContent=`${r}, ${i} (${d})`,c.setAttribute("data-city",r),c.setAttribute("data-countryCode",d),c.addEventListener("click",()=>{t.value="",e.innerHTML="",localStorage.setItem("selectedCity",r),localStorage.setItem("selectedCountryCode",d)}),c.addEventListener("mouseover",()=>{c.classList.add("highlight")}),c.addEventListener("mouseout",()=>{c.classList.remove("highlight")}),e.appendChild(c)}}),t.addEventListener("keydown",o=>{const s=Array.from(e.querySelectorAll("li"));o.key==="ArrowDown"?(o.preventDefault(),a=(a+1)%s.length,I(s,a)):o.key==="ArrowUp"?(o.preventDefault(),a=(a-1+s.length)%s.length,I(s,a)):o.key==="Enter"&&(o.preventDefault(),a>-1&&s[a].click())}),document.addEventListener("click",o=>{!t.contains(o.target)&&!e.contains(o.target)&&(e.querySelector(".highlight")||(t.value=""),e.innerHTML="")})},I=(t,e)=>{t.forEach((n,a)=>{a===e?n.classList.add("highlight"):n.classList.remove("highlight")})};function Q(){const t=document.getElementById("cityInput"),e=document.getElementById("suggestions");t.addEventListener("focus",()=>{$(t,e,[])}),t.addEventListener("input",()=>{const n=t.value.trim();if(n.length<2){e.innerHTML="";return}Y(async()=>{const a=await X(n);$(t,e,a)},300)})}async function Z(t,e){if((!t||!e)&&(t=localStorage.getItem("selectedCity"),e=localStorage.getItem("selectedCountryCode")),!t||!e)return console.error("City or country code is missing!"),null;const n=`${p.endpoints.geocoding}?q=${encodeURIComponent(t)},${e}&limit=1&appid=${p.apiKey}`;try{const o=await(await fetch(n)).json();if(o.length>0){const{lat:s,lon:r}=o[0];return g(s,r,!1),{lat:s,lon:r}}else console.error("No geolocation data found!")}catch(a){console.error("Error fetching geolocation data:",a)}return null}const ee=document.getElementById("current-location-item");ee.addEventListener("click",async()=>{try{await L()}catch(t){console.error("Error handling current location:",t)}});async function te(){return new Promise((t,e)=>{if(!navigator.geolocation){e("Geolocation is not supported by this browser.");return}navigator.geolocation.getCurrentPosition(n=>{console.log("Geolocation position:",n);const{latitude:a,longitude:o}=n.coords;g(a,o,!0),t({lat:a,lon:o})},n=>{switch(n.code){case n.PERMISSION_DENIED:e("User denied the request for Geolocation.");break;case n.POSITION_UNAVAILABLE:e("Location information is unavailable.");break;case n.TIMEOUT:e("The request to get user location timed out.");break;default:e("An unknown error occurred.");break}})})}async function L(){try{const{lat:t,lon:e}=await te();console.log("Location updated successfully:",{lat:t,lon:e}),localStorage.setItem("useCurrentLocation","true"),y(),w()}catch(t){console.error("Error fetching current location:",t)}}document.addEventListener("DOMContentLoaded",()=>{Q(),ne(),document.getElementById("suggestions").addEventListener("click",oe),ae()});async function ne(){try{if(localStorage.getItem("useCurrentLocation")==="true")console.log("Using current location as per user preference."),await L();else{const{city:e,countryCode:n}=A();e&&n?(console.log(`Using saved location: ${e}, ${n}`),await O(e,n)):console.warn("No saved location found. Please select a location.")}}catch(t){console.error("Error initializing app:",t)}}async function oe(t){try{if(t.target.id==="current-location-item"){await L();return}const{city:n,countryCode:a}=A();n&&a?(localStorage.setItem("useCurrentLocation","false"),console.log(`Manual location selected: ${n}, ${a}`),await O(n,a)):console.error("Invalid location selection.")}catch(e){console.error("Error handling location change:",e)}}async function O(t,e){if(h()){console.log("Rate limit exceeded. Try again later.");return}const n=await Z(t,e);n?(g(n.lat,n.lon,!1),y(),w()):console.error("Unable to determine latitude/longitude.")}function ae(){setInterval(()=>{l.lat&&l.lon?h()?console.log("Skipping auto-refresh due to rate limiting."):(y(),w()):console.warn("Location not set. Skipping auto-refresh.")},6e5)}function A(){const t=localStorage.getItem("selectedCity"),e=localStorage.getItem("selectedCountryCode");return{city:t,countryCode:e}}
